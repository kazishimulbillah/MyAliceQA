<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-25T05:02:40Z" name="Default suite" finished-at="2024-08-25T05:03:10Z" duration-ms="29813">
    <groups>
    </groups>
    <test started-at="2024-08-25T05:02:40Z" name="Default test" finished-at="2024-08-25T05:03:10Z" duration-ms="29813">
      <class name="manga.MangaAPP.TestCases.EndToEndTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:39Z" name="setUp" finished-at="2024-08-25T11:02:40Z" duration-ms="1394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setExtent()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:40Z" name="setExtent" finished-at="2024-08-25T11:02:40Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:40Z" name="before" finished-at="2024-08-25T11:02:40Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="VerifyLoginForm()[pri:1, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:40Z" name="VerifyLoginForm" finished-at="2024-08-25T11:02:41Z" duration-ms="1043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginForm -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:41Z" name="getResult" finished-at="2024-08-25T11:02:41Z" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginForm status=SUCCESS method=EndToEndTests.VerifyLoginForm()[pri:1, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:41Z" name="before" finished-at="2024-08-25T11:02:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="VerifyLoginWithInvalidCredentials()[pri:2, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:41Z" name="VerifyLoginWithInvalidCredentials" finished-at="2024-08-25T11:02:43Z" duration-ms="2177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:43Z" name="getResult" finished-at="2024-08-25T11:02:43Z" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginWithInvalidCredentials status=SUCCESS method=EndToEndTests.VerifyLoginWithInvalidCredentials()[pri:2, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:43Z" name="before" finished-at="2024-08-25T11:02:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="VerifyLoginWithValidCredentials()[pri:3, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:43Z" name="VerifyLoginWithValidCredentials" finished-at="2024-08-25T11:02:46Z" duration-ms="2695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:46Z" name="getResult" finished-at="2024-08-25T11:02:46Z" duration-ms="150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginWithValidCredentials status=SUCCESS method=EndToEndTests.VerifyLoginWithValidCredentials()[pri:3, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="VerifyMangaDetailsModal()[pri:4, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:46Z" name="VerifyMangaDetailsModal" finished-at="2024-08-25T11:02:54Z" duration-ms="7809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMangaDetailsModal -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:46Z" name="before" finished-at="2024-08-25T11:02:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:54Z" name="getResult" finished-at="2024-08-25T11:02:54Z" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMangaDetailsModal status=SUCCESS method=EndToEndTests.VerifyMangaDetailsModal()[pri:4, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="VerifyMangaSearchAndDisplay()[pri:5, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:54Z" name="VerifyMangaSearchAndDisplay" finished-at="2024-08-25T11:03:01Z" duration-ms="6301" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="manga-name"]"}
  (Session info: chrome=127.0.6533.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.6.1', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bd64c52665f9dc1f8776f5d36b49ec58, findElement {value=//*[@id="manga-name"], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.120, chrome: {chromedriverVersion: 127.0.6533.119 (bdef6783a05..., userDataDir: /var/folders/0d/_p_76fds1gj...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60853}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:60853/devtoo..., se:cdpVersion: 127.0.6533.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bd64c52665f9dc1f8776f5d36b49ec58]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="manga-name"]"}
  (Session info: chrome=127.0.6533.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.6.1', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bd64c52665f9dc1f8776f5d36b49ec58, findElement {value=//*[@id="manga-name"], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.120, chrome: {chromedriverVersion: 127.0.6533.119 (bdef6783a05..., userDataDir: /var/folders/0d/_p_76fds1gj...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60853}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:60853/devtoo..., se:cdpVersion: 127.0.6533.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bd64c52665f9dc1f8776f5d36b49ec58
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at jdk.proxy2/jdk.proxy2.$Proxy17.getText(Unknown Source)
	at mangaApp.QA.Page.MangaSearchPage.VerifySearchedCardName(MangaSearchPage.java:56)
	at manga.MangaAPP.TestCases.EndToEndTests.VerifyMangaSearchAndDisplay(EndToEndTests.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMangaSearchAndDisplay -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:02:54Z" name="before" finished-at="2024-08-25T11:02:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:01Z" name="getResult" finished-at="2024-08-25T11:03:01Z" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMangaSearchAndDisplay status=FAILURE method=EndToEndTests.VerifyMangaSearchAndDisplay()[pri:5, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="VerifyMangaSearchWithNoResult()[pri:6, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:01Z" name="VerifyMangaSearchWithNoResult" finished-at="2024-08-25T11:03:03Z" duration-ms="2103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMangaSearchWithNoResult -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:01Z" name="before" finished-at="2024-08-25T11:03:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:03Z" name="getResult" finished-at="2024-08-25T11:03:03Z" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMangaSearchWithNoResult status=SUCCESS method=EndToEndTests.VerifyMangaSearchWithNoResult()[pri:6, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="VerifyMangaSearchWithAndWithoutResult()[pri:7, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:03Z" name="VerifyMangaSearchWithAndWithoutResult" finished-at="2024-08-25T11:03:10Z" duration-ms="6436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMangaSearchWithAndWithoutResult -->
        <test-method is-config="true" signature="before()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:03Z" name="before" finished-at="2024-08-25T11:03:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:10Z" name="getResult" finished-at="2024-08-25T11:03:10Z" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMangaSearchWithAndWithoutResult status=SUCCESS method=EndToEndTests.VerifyMangaSearchWithAndWithoutResult()[pri:7, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:10Z" name="endReport" finished-at="2024-08-25T11:03:10Z" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:manga.MangaAPP.TestCases.EndToEndTests@74bf1791]" started-at="2024-08-25T11:03:10Z" name="tearDown" finished-at="2024-08-25T11:03:10Z" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- manga.MangaAPP.TestCases.EndToEndTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
